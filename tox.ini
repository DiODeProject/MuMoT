[tox]
envlist = py36, py37, py38
isolated_build = True

[testenv]
extras = 
    test
    docs
passenv = DISPLAY BROWSER TOXENV
install_command = pip install {opts} {packages}
deps = 
    codecov>=1.4.0
    coverage
whitelist_externals = 
    bash
    test
    wc
    make
commands = 
    ; Ensure ipywidgets Jupyter extension is installed
    jupyter nbextension enable --py --sys-prefix widgetsnbextension

    ; Run unit tests and generate code coverage report
    pytest --verbose --cov-config=tox.ini --cov="{envsitepackagesdir}/mumot" tests

    ; Ensure test Notebooks runs *without errors* (do not check for regressions yet)
    ; (add --nbdime if running tox locally and want to visualise/explore diffs in web browser)
    pytest --verbose --maxfail=1 --nbval-lax --nbval-cell-timeout=120 --cov-config=tox.ini --cov="{envsitepackagesdir}/mumot" --cov-append \
        TestNotebooks/MuMoTtest.ipynb \
        TestNotebooks/MiscTests/MuMoTtest_GreekLetters.ipynb \
        TestNotebooks/MiscTests/MuMoTtest_MultiController.ipynb \
        TestNotebooks/MiscTests/MuMoTtest_NoiseFixedPoints.ipynb \
        TestNotebooks/MiscTests/MuMoTtest_oneDimensionalModels.ipynb

    ; Ensure the user manual Notebook runs *without errors* (do not check for regressions yet)
    ; (add --nbdime if running tox locally and want to visualise/explore diffs in web browser)
    pytest --verbose --maxfail=1 --nbval-lax --nbval-cell-timeout=120 docs/MuMoTuserManual.ipynb

    ; Additional example Notebooks (TODO; leave commented)
    ;     TestNotebooks/MiscTests/MuMoTtest_MasterEq.ipynb - currently hangs after showNoiseEqs() for second model?
    ;     TestNotebooks/MiscTests/MuMoTtest_bifurcation.ipynb
    ;     TestNotebooks/MiscTests/MuMoTuserManual_for_LabPresentation.ipynb

    ; Ensure the user manual and regression test Notebooks do not show regressions (TODO; leave commented)
    ; (add --nbdime if running tox locally and want to visualise/explore diffs in web browser)
    ; pytest --verbose --maxfail=1 --nbval --nbval-cell-timeout=120 --cov-config=tox.ini --cov="{envsitepackagesdir}/mumot" --cov-append TestNotebooks/MuMoTtest.ipynb

    ; Check user manual does not contain output cells
    bash -c 'test $(nbshow --outputs docs/MuMoTuserManual.ipynb | wc -c) -eq 0'  

    ; Check we can build the docs
    make --directory docs html

; Used by pytest-cov
[run]
branch = True
source = mumot
; Do not calculate coverage of third-party code.
; (NB here this is the _installed_ code in the hidden virtualenv created by tox,
; not the source code of the package)
omit =
    */site-packages/mumot/gen/*

; Used by pytest-cov
[report]
exclude_lines =
    if self.debug:
    pragma: no cover
    raise NotImplementedError
    if __name__ == .__main__.:
ignore_errors = True
